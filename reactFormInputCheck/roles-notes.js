[{"content":"import { render, screen } from '@testing-library/react';\n\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"/\">Link</a>\n      <button>Button</button>\n      <footer>Content Info</footer>\n      <h1>Heading</h1>\n      <header>Banner</header>\n      <img alt=\"description\" /> Img\n      <input type=\"checkbox\" /> checkbox\n      <input type=\"number\" /> spin Button\n      <input type=\"radio\" /> Radio\n      <input type=\"text\" /> Textbox\n      <li>List Item</li>\n      <ul>List Group</ul>\n    </div>\n  );\n}\n\nrender(<RoleExample />);","type":"code","id":"200i6"},{"content":"test('can find element by role', () => {\n  render(<RoleExample />);\n\n  const roles = [\n    'link',\n    'button',\n    'contentinfo',\n    'heading',\n    'banner',\n    'img',\n    'checkbox',\n    'spinbutton',\n    'radio',\n    'textbox',\n    'listitem',\n    'list',\n  ];\n\n  for (let role of roles) {\n    const el = screen.getByRole(role);\n    expect(el).toBeInTheDocument();\n  }\n});","type":"code","id":"pmmz7"},{"content":"function AccessibleName() {\n  return (\n    <div>\n       \n      <button>Submit</button>\n      <button>Cancel</button>\n    </div>\n  );\n}\n\nrender(<AccessibleName/>)","type":"code","id":"byqjq"},{"content":"test('can select by accessible name', () => {\n  render(<AccessibleName />);\n  \n  const submitButton = screen.getByRole('button', {\n    name: /Submit/i,\n  });\n\n  const cancelButton = screen.getByRole('button', {\n    name: /cancel/i,\n  });\n\n  expect(submitButton).toBeInTheDocument();\n  expect(cancelButton).toBeInTheDocument();\n});","type":"code","id":"u3fgd"},{"content":"function MoreNames() {\n  return (\n    <>\n      <label htmlFor=\"email\">Email</label>\n      <input id=\"email\" />\n      <label htmlFor=\"search\">Search</label>\n      <input id=\"search\" />\n    </>\n  );\n}\n\nrender(<MoreNames />);","type":"code","id":"ndb57"},{"content":"test('make sure two input render', () => {\n  render(<MoreNames />);\n\n  const emailInput = screen.getByRole('textbox', {\n    name: /email/i,\n  });\n\n  const searchInput = screen.getByRole('textbox', {\n    name: /search/i,\n  });\n\n  expect(emailInput).toBeInTheDocument();\n  expect(searchInput).toBeInTheDocument();\n});","type":"code","id":"kep7b"},{"content":"function IconButton() {\n  return (\n    <div>\n      <button aria-label=\"sign in\">\n        <svg />\n      </button>\n      <button aria-label='sign out'> \n        <svg />\n      </button>\n    </div>\n  );\n}\n\nrender(<IconButton />);","type":"code","id":"7dd7w"},{"content":"test('find element based on label', () => {\n  render(<IconButton />);\n\n  const signinBtn = screen.getByRole('button', {\n    name: /sign in/i,\n  });\n  const signoutBtn = screen.getByRole('button', {\n    name: /sign out/i,\n  });\n\n  expect(signinBtn).toBeInTheDocument();\n\n  expect(signoutBtn).toBeInTheDocument();\n});","type":"code","id":"um1xl"}]